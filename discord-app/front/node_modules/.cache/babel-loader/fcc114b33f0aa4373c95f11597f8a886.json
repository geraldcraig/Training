{"ast":null,"code":"var _jsxFileName = \"/Users/geraldcraig/Repos/discord-app/discord-frontend/src/authPages/LoginPage/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AuthBox from \"../../shared/components/AuthBox\";\nimport LoginPageFooter from \"./LoginPageFooter\";\nimport LoginPageHeader from \"./LoginPageHeader\";\nimport LoginPageInputs from \"./LoginPageInputs\";\nimport { validateLoginForm } from \"../../shared/utils/validators\";\nimport { connect } from \"react-redux\";\nimport { getActions } from \"../../store/actions/authActions\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = _ref => {\n  _s();\n\n  let {\n    login\n  } = _ref;\n  const history = useHistory();\n  const [mail, setMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n  useEffect(() => {\n    setIsFormValid(validateLoginForm({\n      mail,\n      password\n    }));\n  }, [mail, password, setIsFormValid]);\n\n  const handleLogin = () => {\n    const userDetails = {\n      mail,\n      password\n    };\n    login(userDetails, history);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthBox, {\n    children: [/*#__PURE__*/_jsxDEV(LoginPageHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginPageInputs, {\n      mail: mail,\n      setMail: setMail,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginPageFooter, {\n      isFormValid: isFormValid,\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"g/SEnunGLDNUShh5FI9g2APBSdk=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\n\nconst mapActionsToProps = dispatch => {\n  return { ...getActions(dispatch)\n  };\n};\n\nexport default connect(null, mapActionsToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/geraldcraig/Repos/discord-app/discord-frontend/src/authPages/LoginPage/LoginPage.js"],"names":["React","useState","useEffect","AuthBox","LoginPageFooter","LoginPageHeader","LoginPageInputs","validateLoginForm","connect","getActions","useHistory","LoginPage","login","history","mail","setMail","password","setPassword","isFormValid","setIsFormValid","handleLogin","userDetails","mapActionsToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,SAAS,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/B,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,cAAc,CAACZ,iBAAiB,CAAC;AAAEO,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAAlB,CAAd;AACD,GAFQ,EAEN,CAACF,IAAD,EAAOE,QAAP,EAAiBG,cAAjB,CAFM,CAAT;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxB,UAAMC,WAAW,GAAG;AAClBP,MAAAA,IADkB;AAElBE,MAAAA;AAFkB,KAApB;AAKAJ,IAAAA,KAAK,CAACS,WAAD,EAAcR,OAAd,CAAL;AACD,GAPD;;AASA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,eAAD;AAAiB,MAAA,WAAW,EAAEC,WAA9B;AAA2C,MAAA,WAAW,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMT,S;UACYD,U;;;KADZC,S;;AAkCN,MAAMW,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO,EACL,GAAGd,UAAU,CAACc,QAAD;AADR,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CAAC,IAAD,EAAOc,iBAAP,CAAP,CAAiCX,SAAjC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AuthBox from \"../../shared/components/AuthBox\";\r\nimport LoginPageFooter from \"./LoginPageFooter\";\r\nimport LoginPageHeader from \"./LoginPageHeader\";\r\nimport LoginPageInputs from \"./LoginPageInputs\";\r\nimport { validateLoginForm } from \"../../shared/utils/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { getActions } from \"../../store/actions/authActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginPage = ({ login }) => {\r\n  const history = useHistory();\r\n\r\n  const [mail, setMail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsFormValid(validateLoginForm({ mail, password }));\r\n  }, [mail, password, setIsFormValid]);\r\n\r\n  const handleLogin = () => {\r\n    const userDetails = {\r\n      mail,\r\n      password,\r\n    };\r\n\r\n    login(userDetails, history);\r\n  };\r\n\r\n  return (\r\n    <AuthBox>\r\n      <LoginPageHeader />\r\n      <LoginPageInputs\r\n        mail={mail}\r\n        setMail={setMail}\r\n        password={password}\r\n        setPassword={setPassword}\r\n      />\r\n      <LoginPageFooter isFormValid={isFormValid} handleLogin={handleLogin} />\r\n    </AuthBox>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    ...getActions(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(LoginPage);\r\n"]},"metadata":{},"sourceType":"module"}