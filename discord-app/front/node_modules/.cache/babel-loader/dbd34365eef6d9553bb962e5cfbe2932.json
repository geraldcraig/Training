{"ast":null,"code":"var _jsxFileName = \"/Users/geraldcraig/Repos/discord-app/discord-frontend/src/authPages/RegisterPage/RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport AuthBox from \"../../shared/components/AuthBox\";\nimport RegisterPageInputs from \"./RegisterPageInputs\";\nimport RegisterPageFooter from \"./RegisterPageFooter\";\nimport { validateRegisterForm } from \"../../shared/utils/validators\";\nimport { connect } from \"react-redux\";\nimport { getActions } from \"../../store/actions/authActions\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = _ref => {\n  _s();\n\n  let {\n    register\n  } = _ref;\n  const history = useHistory();\n  const [mail, setMail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const handleRegister = () => {\n    const userDetails = {\n      mail,\n      password,\n      username\n    };\n    register(userDetails, history);\n  };\n\n  useEffect(() => {\n    setIsFormValid(validateRegisterForm({\n      mail,\n      username,\n      password\n    }));\n  }, [mail, username, password, setIsFormValid]);\n  return /*#__PURE__*/_jsxDEV(AuthBox, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        color: \"white \"\n      },\n      children: \"Create an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterPageInputs, {\n      mail: mail,\n      setMail: setMail,\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterPageFooter, {\n      handleRegister: handleRegister,\n      isFormValid: isFormValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"Ircft4DWXkU2c6j05J+xvBso8mA=\", false, function () {\n  return [useHistory];\n});\n\n_c = RegisterPage;\n\nconst mapActionsToProps = dispatch => {\n  return { ...getActions(dispatch)\n  };\n};\n\nexport default connect(null, mapActionsToProps)(RegisterPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["/Users/geraldcraig/Repos/discord-app/discord-frontend/src/authPages/RegisterPage/RegisterPage.js"],"names":["React","useState","useEffect","Typography","AuthBox","RegisterPageInputs","RegisterPageFooter","validateRegisterForm","connect","getActions","useHistory","RegisterPage","register","history","mail","setMail","username","setUsername","password","setPassword","isFormValid","setIsFormValid","handleRegister","userDetails","color","mapActionsToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMqB,cAAc,GAAG,MAAM;AAC3B,UAAMC,WAAW,GAAG;AAClBT,MAAAA,IADkB;AAElBI,MAAAA,QAFkB;AAGlBF,MAAAA;AAHkB,KAApB;AAMAJ,IAAAA,QAAQ,CAACW,WAAD,EAAcV,OAAd,CAAR;AACD,GARD;;AAUAX,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,cAAc,CACZd,oBAAoB,CAAC;AACnBO,MAAAA,IADmB;AAEnBE,MAAAA,QAFmB;AAGnBE,MAAAA;AAHmB,KAAD,CADR,CAAd;AAOD,GARQ,EAQN,CAACJ,IAAD,EAAOE,QAAP,EAAiBE,QAAjB,EAA2BG,cAA3B,CARM,CAAT;AAUA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,EAAE,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,kBAAD;AACE,MAAA,IAAI,EAAEV,IADR;AAEE,MAAA,OAAO,EAAEC,OAFX;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,WAAW,EAAEC,WAJf;AAKE,MAAA,QAAQ,EAAEC,QALZ;AAME,MAAA,WAAW,EAAEC;AANf;AAAA;AAAA;AAAA;AAAA,YAJF,eAYE,QAAC,kBAAD;AACE,MAAA,cAAc,EAAEG,cADlB;AAEE,MAAA,WAAW,EAAEF;AAFf;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAhDD;;GAAMT,Y;UACYD,U;;;KADZC,Y;;AAkDN,MAAMc,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO,EACL,GAAGjB,UAAU,CAACiB,QAAD;AADR,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CAAC,IAAD,EAAOiB,iBAAP,CAAP,CAAiCd,YAAjC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@mui/material\";\r\nimport AuthBox from \"../../shared/components/AuthBox\";\r\nimport RegisterPageInputs from \"./RegisterPageInputs\";\r\nimport RegisterPageFooter from \"./RegisterPageFooter\";\r\nimport { validateRegisterForm } from \"../../shared/utils/validators\";\r\nimport { connect } from \"react-redux\";\r\nimport { getActions } from \"../../store/actions/authActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RegisterPage = ({ register }) => {\r\n  const history = useHistory();\r\n\r\n  const [mail, setMail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  const handleRegister = () => {\r\n    const userDetails = {\r\n      mail,\r\n      password,\r\n      username,\r\n    };\r\n\r\n    register(userDetails, history);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsFormValid(\r\n      validateRegisterForm({\r\n        mail,\r\n        username,\r\n        password,\r\n      })\r\n    );\r\n  }, [mail, username, password, setIsFormValid]);\r\n\r\n  return (\r\n    <AuthBox>\r\n      <Typography variant=\"h5\" sx={{ color: \"white \" }}>\r\n        Create an account\r\n      </Typography>\r\n      <RegisterPageInputs\r\n        mail={mail}\r\n        setMail={setMail}\r\n        username={username}\r\n        setUsername={setUsername}\r\n        password={password}\r\n        setPassword={setPassword}\r\n      />\r\n      <RegisterPageFooter\r\n        handleRegister={handleRegister}\r\n        isFormValid={isFormValid}\r\n      />\r\n    </AuthBox>\r\n  );\r\n};\r\n\r\nconst mapActionsToProps = (dispatch) => {\r\n  return {\r\n    ...getActions(dispatch),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapActionsToProps)(RegisterPage);\r\n"]},"metadata":{},"sourceType":"module"}